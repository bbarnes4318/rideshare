name: Deploy to Digital Ocean

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Deploy to Digital Ocean
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: 157.230.239.5
        username: root
        key: ${{ secrets.DO_SSH_KEY }}
        script: |
          # Navigate to app directory or clone if doesn't exist
          if [ ! -d "/var/www/rideshare" ]; then
            cd /var/www
            git clone https://github.com/bbarnes4318/rideshare.git
            cd rideshare
          else
            cd /var/www/rideshare
            git pull origin main
          fi
          
          # Install dependencies
          npm install --production
          
          # Create .env file if it doesn't exist
          if [ ! -f .env ]; then
            cat > .env << 'EOF'
          PORT=5000
          MONGODB_URI=mongodb+srv://doadmin:1xG83u724eXZVj09@rideshare-c3642684.mongo.ondigitalocean.com/admin?tls=true&authSource=admin
          JWT_SECRET=RideshareAnalytics2025SecureJWTKey$#@!
          NODE_ENV=production
          IPSTACK_API_KEY=d798d581058a28f14012d786ab2b8abc
          SERVER_IP=157.230.239.5
          DOMAIN=perenroll.com
          EOF
          fi
          
          # Create directories
          mkdir -p exports
          mkdir -p logs
          
          # Set permissions
          chown -R www-data:www-data /var/www/rideshare
          chmod -R 755 /var/www/rideshare
          
          # Restart or start PM2 app
          pm2 restart rideshare-analytics || pm2 start server.js --name "rideshare-analytics"
          
          # Setup database if needed
          npm run setup
          
          # Save PM2 configuration
          pm2 save
          
          # Show status
          pm2 status
          
          echo "âœ… Deployment completed successfully!"